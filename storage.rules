rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function isSignedIn() { return request.auth != null; }
    function isOwner(eventId) {
      return isSignedIn() &&
        get(/databases/(default)/documents/events/$(eventId)).data.organizerId == request.auth.uid;
    }
    function isAllowedContent() {
      return request.resource.contentType.matches('application/pdf')
        || request.resource.contentType.matches('image/.*')
        || request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.*')
        || request.resource.contentType.matches('application/msword')
        || request.resource.contentType.matches('text/plain');
    }
    function isSmall() { return request.resource.size < 20 * 1024 * 1024; }

    // This path is for public-facing event assets.
    // Making it readable by everyone.
    match /public/{allPaths=**} {
      allow read: if true;
    }

    match /events/{eventId}/docs/{file=**} {
      allow read: if true; // Public assets should be readable by anyone
      allow write: if isOwner(eventId) && isAllowedContent() && isSmall();
      allow delete: if isOwner(eventId);
    }
  }
}