
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.email == 'admin@rally.world';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // CREATE: A new user can create their own user document.
      allow create: if request.auth != null && request.auth.uid == userId;

      // READ: 
      // - A user can read their own profile.
      // - An admin can read any user's profile.
      allow read: if request.auth.uid == userId || isAdmin();

      // UPDATE: A user can update their own profile.
      allow update: if request.auth.uid == userId;

      // DELETE: No one can delete user profiles for now.
      allow delete: if false;
    }

    // Rules for the 'events' collection
    match /events/{eventId} {
      // READ: Anyone, authenticated or not, can read event details.
      allow read: if true;

      // CREATE, UPDATE, DELETE: Only the user whose ID matches the event's organizerId can write.
      allow write: if request.auth != null && request.auth.uid == request.resource.data.organizerId;
    }
  }
}
